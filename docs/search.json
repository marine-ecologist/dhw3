[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "",
    "text": "D3W is a data visualisation of the annual heatstress (DHW) for each reef on the Great Barrier Reef. Each row represents a reef (4306 reefs in total), each column represents the amount of heat stress experienced (between 1981 and 2025). The colors represent the maximum heat stress in a given year: in simple terms,\n\nnormal• coral bleaching • strong coral bleaching • likely catastrophic bleaching\n\nD3HW was created using the D3 library in javascript - hence the term D3 egree Heating Weeks."
  },
  {
    "objectID": "about.html#about-d3hw",
    "href": "about.html#about-d3hw",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "",
    "text": "D3W is a data visualisation of the annual heatstress (DHW) for each reef on the Great Barrier Reef. Each row represents a reef (4306 reefs in total), each column represents the amount of heat stress experienced (between 1981 and 2025). The colors represent the maximum heat stress in a given year: in simple terms,\n\nnormal• coral bleaching • strong coral bleaching • likely catastrophic bleaching\n\nD3HW was created using the D3 library in javascript - hence the term D3 egree Heating Weeks."
  },
  {
    "objectID": "about.html#why-d3hw",
    "href": "about.html#why-d3hw",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Why D3HW?",
    "text": "Why D3HW?\nSea Surface Temperature (SST) data is widely accessible from various satellites, but is often hard to visualise. Questions like “how bad is this year’s bleaching compared to last year?”, and “How many reefs are affected by bleaching?” are difficult to map due to the size of the Great Barrier Reef, and time-series charts often mask the impacts on individual reefs.\nD3HW aims to i) simplify long-term trends in temperature and climate change on the Great Barrier Reef, and ii) highlight that intense heatwaves on the Great Barrier Reef are a recent phenomena, and not a “normal” state."
  },
  {
    "objectID": "about.html#gbr-d3hw",
    "href": "about.html#gbr-d3hw",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "GBR D3HW",
    "text": "GBR D3HW\nThe impact of coral bleaching on the Great Barrier Reef (GBR) takes time to assess through surveys, yet the link between DHW and both coral bleaching and coral mortality are well documented on the Great Barrier Reef.\nUnlike the recent bushfires where the impacts of climate-change driven heatwaves are clearly visible, the recent mass coral bleaching events on the Great Barrier Reef have largely gone by unreported as they unfolded - despite satellite data being readily available in near real-time.\nAs one journalist put to me recently: “if a bleaching event is underway on the GBR and no reporting on the temperature data, how can anyone know the size and scale that these events are actually occuring?”\nD3HW aims to make satellite data more accessible to non-scientific audiences, allowing comparisons between current heat-stress levels with previous events, and facilitating tracking of coral bleaching events as they occur in realtime.\n\nReef-level tracking of annual DHW\nD3HW aims to make it easier to visualise time-series of Degree Heating Weeks for any reef on the GBR. For example, comparing Moore Reef (Cairns), Rib Reef (Townsville), and Wistari Reef (southern GBR) highlights how Wistari in the south avoided heatstress for nearly a decade prior to the 2024 mass bleaching event, while Moore Reef and Rib Reef further north have been impacted repeatedly by heatwaves in 2016, 2017, 2020, 2021, 2022, and 2024."
  },
  {
    "objectID": "about.html#reef-level-tracking-of-annual-dhw",
    "href": "about.html#reef-level-tracking-of-annual-dhw",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Reef-level tracking of annual DHW",
    "text": "Reef-level tracking of annual DHW\nD3HW aims to make it easier to visualise time-series of Degree Heating Weeks for any reef on the GBR. For example, comparing Moore Reef (Cairns), Rib Reef (Townsville), and Wistari Reef (southern GBR) highlights how Wistari in the south avoided heatstress for nearly a decade prior to the 2024 mass bleaching event, while Moore Reef and Rib Reef further north have been impacted repeatedly by heatwaves in 2016, 2017, 2020, 2021, 2022, and 2024."
  },
  {
    "objectID": "about.html#datasets-used-in-d3hw",
    "href": "about.html#datasets-used-in-d3hw",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Datasets used in D3HW:",
    "text": "Datasets used in D3HW:\nDHW uses"
  },
  {
    "objectID": "data-d3.html",
    "href": "data-d3.html",
    "title": "Data processing - D3",
    "section": "",
    "text": "The D3.js heatmap script renders a dynamic heatmap with the following features:"
  },
  {
    "objectID": "data-d3.html#quarto",
    "href": "data-d3.html#quarto",
    "title": "Data processing - D3",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "data-d3.html#running-code",
    "href": "data-d3.html#running-code",
    "title": "Data processing - D3",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\nCode\n1 + 1\n\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "data-processing.html#initialise-data",
    "href": "data-processing.html#initialise-data",
    "title": "Data processing in R",
    "section": "1. Initialise data",
    "text": "1. Initialise data\nload libraries, import raster datasets, download spatial data for GBR reefs (see dhw::download_spatial_gbr for details)\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(RColorBrewer)\nlibrary(dhw)\nlibrary(foreach)\n\n# --- Load data ---\nGBR_OISST &lt;- rast(\"/Users/rof011/GBR-dhw/datasets/GBR_2025_OISST_DHW.rds\")\nGBR_CRW_DHW &lt;- rast(\"/Users/rof011/GBR-dhw/datasets/GBR_CoralTemp_DHW_full.rds\")\ngbr_reefs_base&lt;- download_gbr_spatial(return = \"base\") |&gt; st_transform(4326)\ngbr_reefs &lt;- download_gbr_spatial(return = \"combined\") |&gt; st_transform(4326)\nGBRMPpolygon &lt;- vect(gbr_reefs |&gt; st_transform(4326))"
  },
  {
    "objectID": "data-processing.html#calculate-dhw-for-oisst",
    "href": "data-processing.html#calculate-dhw-for-oisst",
    "title": "Data processing in R",
    "section": "2. Calculate DHW for OISST",
    "text": "2. Calculate DHW for OISST\nCompute the climatology baseline and extract DHW (Degree Heating Weeks) from the OISST dataset.\n\nOISST_climatology &lt;- create_climatology(GBR_OISST, quiet=TRUE)\nGBR_OISST_DHW &lt;- OISST_climatology$dhw"
  },
  {
    "objectID": "data-processing.html#calculate-annual-dhwmax",
    "href": "data-processing.html#calculate-annual-dhwmax",
    "title": "Data processing in R",
    "section": "3. Calculate annual DHWmax",
    "text": "3. Calculate annual DHWmax\nCompute yearly maximum DHW for both OISST and CoralTemp CRW datasets cropped to the GBRMP boundary\n\nOISST_DHW &lt;- summarise_raster(GBR_OISST_DHW, index = \"years\", fun = max, na.rm = TRUE, overwrite = TRUE) |&gt;\n  crop(GBRMPpolygon)\n\nCRW_DHW &lt;- summarise_raster(GBR_CRW_DHW, index = \"years\", fun = max, na.rm = TRUE, overwrite = TRUE) |&gt;\n  crop(GBRMPpolygon)"
  },
  {
    "objectID": "data-processing.html#extract-dhw-metrics-per-reef",
    "href": "data-processing.html#extract-dhw-metrics-per-reef",
    "title": "Data processing in R",
    "section": "4. Extract DHW metrics per reef",
    "text": "4. Extract DHW metrics per reef\nExtract per-reef DHW values by calculating area-weighted mean DHW for each reef polygon and each year.\n\nOISST_DHW_reefs &lt;- foreach(i = seq_len(nlyr(OISST_DHW)), .combine = rbind) %do% {\n  gbr_reefs |&gt;\n    mutate(\n      date = rep(time(OISST_heat[[i]]), nrow(gbr_reefs)),\n      sst = exactextractr::exact_extract(OISST_DHW[[i]], gbr_reefs, progress = FALSE, fun = \"weighted_mean\", weights = \"area\")\n    )\n}\n\n\nCRW_DHW_reefs &lt;- foreach(i = seq_len(nlyr(CRW_DHW)), .combine = rbind) %do% {\n  gbr_reefs |&gt;\n    mutate(\n      date = rep(time(OISST_heat[[i]]), nrow(gbr_reefs)),\n      sst = exactextractr::exact_extract(CRW_DHW[[i]], gbr_reefs, progress = FALSE, fun = \"weighted_mean\", weights = \"area\")\n    )\n}"
  },
  {
    "objectID": "data-processing.html#format-data-for-d3-heatmap",
    "href": "data-processing.html#format-data-for-d3-heatmap",
    "title": "Data processing in R",
    "section": "5. Format data for d3 heatmap",
    "text": "5. Format data for d3 heatmap\nExtract centroids and latitude of each reef for d3 heatmap.\n\nOISST_DHW_reefs_centroids &lt;- OISST_DHW_reefs %&gt;%\n  st_centroid() %&gt;%\n  mutate(\n    lon = st_coordinates(.)[, 1],\n    lat = st_coordinates(.)[, 2]\n  ) %&gt;%\n  st_drop_geometry() %&gt;%\n  as.data.frame() |&gt;\n  rename(dhw = sst) |&gt;\n  rename(year = date) |&gt;\n  mutate(dhw = round(dhw,1)) |&gt;\n  mutate(lat = round(lat,1)) |&gt;\n  select(-area, -lon) |&gt;\n  pivot_wider(id_cols=c(\"LABEL_ID\", \"GBR_NAME\", \"lat\"), values_from=\"dhw\", names_from=\"year\") |&gt;\n  rename(ID = LABEL_ID, Reef=GBR_NAME)\n\nCRW_DHW_reefs_centroids &lt;- CRW_DHW_reefs %&gt;%\n  st_centroid() %&gt;%\n  mutate(\n    lon = st_coordinates(.)[, 1],\n    lat = st_coordinates(.)[, 2]\n  ) %&gt;%\n  st_drop_geometry() %&gt;%\n  as.data.frame() |&gt;\n  rename(dhw = sst) |&gt;\n  rename(year = date) |&gt;\n  mutate(dhw = round(dhw,1)) |&gt;\n  mutate(lat = round(lat,1)) |&gt;\n  select(-area, -lon) |&gt;\n  pivot_wider(id_cols=c(\"LABEL_ID\", \"GBR_NAME\", \"lat\"), values_from=\"dhw\", names_from=\"year\") |&gt;\n  rename(ID = LABEL_ID, Reef=GBR_NAME)\n\n\n#write.csv(OISST_DHW_reefs_centroids, \"/dhw3/data/OISST_DHWmax.csv\")\n#write.csv(CRW_DHW_reefs_centroids, \"/dhw3/data/CRW_DHWmax.csv\")"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Contact: George Roff (g.roff@uq.edu.au)"
  },
  {
    "objectID": "contact.html#section",
    "href": "contact.html#section",
    "title": "Contact",
    "section": "",
    "text": "Contact: George Roff (g.roff@uq.edu.au)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "D3HW",
    "section": "",
    "text": "ter"
  },
  {
    "objectID": "bleaching.html",
    "href": "bleaching.html",
    "title": "FAQ",
    "section": "",
    "text": "Corals are sensitive to warmer temperatures: at around one degree Celsius (1 °C) above the highest annual mean temperature corals exceed their “bleaching threshold”. Degree Heating Weeks (DHW) are a useful metric of cumulative heatstress (i.e. how many times in the last twelve weeks has the temperature reached or exceeded the bleaching threshold?). From NOAA:\n\n“By the time the accumulated heat stress (the DHW) reaches 4 °C-weeks, you can expect to see coral bleaching reef-wide, especially in more sensitive coral species. By the time the DHW value reaches 8 °C-weeks or higher, you are likely to see reef-wide coral bleaching with mortality of heat-sensitive corals”"
  },
  {
    "objectID": "bleaching.html#degree-heating-weeks",
    "href": "bleaching.html#degree-heating-weeks",
    "title": "FAQ",
    "section": "",
    "text": "Corals are sensitive to warmer temperatures: at around one degree Celsius (1 °C) above the highest annual mean temperature corals exceed their “bleaching threshold”. Degree Heating Weeks (DHW) are a useful metric of cumulative heatstress (i.e. how many times in the last twelve weeks has the temperature reached or exceeded the bleaching threshold?). From NOAA:\n\n“By the time the accumulated heat stress (the DHW) reaches 4 °C-weeks, you can expect to see coral bleaching reef-wide, especially in more sensitive coral species. By the time the DHW value reaches 8 °C-weeks or higher, you are likely to see reef-wide coral bleaching with mortality of heat-sensitive corals”"
  },
  {
    "objectID": "bleaching.html#corals-dhw-the-great-barrier-reef-and-climate-change",
    "href": "bleaching.html#corals-dhw-the-great-barrier-reef-and-climate-change",
    "title": "FAQ",
    "section": "Corals, DHW, the Great Barrier Reef, and climate change",
    "text": "Corals, DHW, the Great Barrier Reef, and climate change\nThe Great Barrier Reef is undergoing rapid warming in the past three decades. A total of nine coral bleaching events have been recorded in 1998, 2002, 2016, 2017, 2018, 2020, 2022, 2024, and 2025. These events have resulted in mass mortality of corals, impacting coral population structures, transforming assemblages, delaying recovery and restructuring entire ecosytems.\nLong-term timeseries data helps prevent normalising the current state by providing historical context. For example, here is a timeseries for 560 reefs in the northern GBR spanning Lama Lama Sea Country to the Wuthathi sea country:\n\n\nCode\nlibrary(tidyverse)\n\nlibrary(ggplot2)\n\nGBR_DHW_CRW &lt;- read.csv(\"/Users/rof011/dhw3/data/CRW_DHWmax.csv\") |&gt; \n\n  pivot_longer(\n\n    cols = starts_with(\"X\"),\n\n    names_to = \"year\",\n\n    values_to = \"dhw\"\n\n  ) %&gt;%\n\n  mutate(\n\n    year = as.numeric(str_remove(year, \"^X\"))\n\n  ) |&gt; filter(lat &lt; -11) |&gt; filter(lat &gt; -14)\n\ndhw_numeric_breaks &lt;- c(0, 3, 6, 9, 12, 15, 18, 21)  # Adjust numeric breaks\n\ndhw_colour_breaks &lt;- c(\"#006f99\", \"#00A6E5\", \"#FFD700\", \"#FF8C00\", \"#B20000\", \"#660000\", \"#3D0000\")\n\nggplot() + theme_bw() +\n\n  geom_tile(data = GBR_DHW_CRW, aes(x = year, y = lat, fill = dhw), linewidth = 0) +\n\n  scale_fill_gradientn(\n\n    limits = c(0, 21),\n\n    name = expression(DHW[max]),\n\n    na.value = \"transparent\",\n\n    breaks = dhw_numeric_breaks,\n\n    labels = dhw_numeric_breaks,\n\n    colours = dhw_colour_breaks,\n\n    values = scales::rescale(dhw_numeric_breaks, from = c(0, 20))\n\n  ) +\n\n  xlab(\"Year\") + ylab(\"Latitude\") +\n\n  # scale_y_continuous(\n\n  #   expand = c(0, 0),\n\n  #   limits = c(-11,-13),\n\n  #   breaks = seq(-11,-13, length.out=5), \n\n  #   labels = seq(-11,-13, length.out=5)\n\n  # ) +\n\n   scale_x_continuous(\n\n    expand = c(0, 0),\n\n    limits = c(1980, 2025),\n\n    breaks = seq(1980, 2025, 2),\n\n    sec.axis = dup_axis(name = \"Year\")\n\n  ) +\n\n  theme(\n\n    # Backgrounds\n\n    plot.background = element_rect(fill = \"#333\", color = NA),\n\n    panel.background = element_rect(fill = \"#333\", color = NA),\n\n    panel.grid = element_blank(),\n\n    \n\n    # Axes\n\n    axis.title = element_text(color = \"white\"),\n\n    axis.text = element_text(color = \"white\"),\n\n    axis.text.x = element_text(angle = 90, hjust = 1, color = \"white\"),\n\n    axis.text.y = element_text(color = \"white\", hjust=-0.2),\n\n    axis.ticks = element_line(color = \"white\"),\n\n    \n\n    # Secondary axis text and title\n\n    axis.title.x.top = element_text(color = \"white\"),\n\n    axis.text.x.top = element_text(color = \"white\"),\n\n    \n\n    # Legend\n\n    legend.background = element_rect(fill = \"#333\", color = NA),\n\n    legend.key = element_rect(fill = \"#333\", color = NA),\n\n    legend.text = element_text(color = \"white\"),\n\n    legend.title = element_text(color = \"white\"),\n\n    \n\n    # Titles\n\n    plot.title = element_text(color = \"white\"),\n\n    plot.subtitle = element_text(color = \"white\"),\n\n    plot.caption = element_text(color = \"white\")\n\n  )\n\n\n\n\n\n\n\n\n\nFor a longer term pre-satellite perspective on the last two decades of climate change and ocean temperatures on the Great Barrier Reef:\n\n“The January–March Coral Sea heat extremes in 2024, 2017 and 2020 (in order of descending mean SST anomalies) were the warmest in 400 years, exceeding the 95th-percentile uncertainty limit of our reconstructed pre-1900 maximum. The 2016, 2004 and 2022 events were the next warmest, exceeding the 90th-percentile\n\nHenley et al 2024 [Nature](https://www.nature.com/articles/s41586-024-07672-x)"
  },
  {
    "objectID": "about.html#degree-heating-weeks-explained",
    "href": "about.html#degree-heating-weeks-explained",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Degree Heating Weeks explained",
    "text": "Degree Heating Weeks explained\nCorals are sensitive to warmer temperatures: at around one degree Celsius (1 °C) above the highest annual mean temperature corals exceed their “bleaching threshold”. Degree Heating Weeks (DHW) are a useful metric of cumulative heatstress (i.e. how many times in the last twelve weeks has the temperature reached or exceeded the bleaching threshold?). From NOAA:\n\n“By the time the accumulated heat stress (the DHW) reaches 4 °C-weeks, you can expect to see coral bleaching reef-wide, especially in more sensitive coral species. By the time the DHW value reaches 8 °C-weeks or higher, you are likely to see reef-wide coral bleaching with mortality of heat-sensitive corals”"
  },
  {
    "objectID": "about.html#coral-bleaching-and-dhw-on-the-gbr",
    "href": "about.html#coral-bleaching-and-dhw-on-the-gbr",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Coral bleaching and DHW on the GBR",
    "text": "Coral bleaching and DHW on the GBR\nThe Great Barrier Reef is undergoing rapid warming in the past three decades. A total of nine coral bleaching events have been recorded in 1998, 2002, 2016, 2017, 2018, 2020, 2022, 2024, and 2025. These events have resulted in mass mortality of corals, impacting coral population structures, transforming assemblages, delaying recovery and restructuring entire ecosytems.\nLong-term timeseries data helps prevent normalising the current state by providing historical context. For example, here is a timeseries for 560 reefs in the northern GBR spanning Lama Lama Sea Country to the Wuthathi sea country:\n\n\nCode\nlibrary(tidyverse)\n\nlibrary(ggplot2)\n\nGBR_DHW_CRW &lt;- read.csv(\"/Users/rof011/dhw3/data/CRW_DHWmax.csv\") |&gt; \n\n  pivot_longer(\n\n    cols = starts_with(\"X\"),\n\n    names_to = \"year\",\n\n    values_to = \"dhw\"\n\n  ) %&gt;%\n\n  mutate(\n\n    year = as.numeric(str_remove(year, \"^X\"))\n\n  ) |&gt; filter(lat &lt; -11) |&gt; filter(lat &gt; -14)\n\ndhw_numeric_breaks &lt;- c(0, 3, 6, 9, 12, 15, 18, 21)  # Adjust numeric breaks\n\ndhw_colour_breaks &lt;- c(\"#006f99\", \"#00A6E5\", \"#FFD700\", \"#FF8C00\", \"#B20000\", \"#660000\", \"#3D0000\")\n\nggplot() + theme_bw() +\n\n  geom_tile(data = GBR_DHW_CRW, aes(x = year, y = lat, fill = dhw), linewidth = 0) +\n\n  scale_fill_gradientn(\n\n    limits = c(0, 21),\n\n    name = expression(DHW[max]),\n\n    na.value = \"transparent\",\n\n    breaks = dhw_numeric_breaks,\n\n    labels = dhw_numeric_breaks,\n\n    colours = dhw_colour_breaks,\n\n    values = scales::rescale(dhw_numeric_breaks, from = c(0, 20))\n\n  ) +\n\n  xlab(\"Year\") + ylab(\"Latitude\") +\n\n  # scale_y_continuous(\n\n  #   expand = c(0, 0),\n\n  #   limits = c(-11,-13),\n\n  #   breaks = seq(-11,-13, length.out=5), \n\n  #   labels = seq(-11,-13, length.out=5)\n\n  # ) +\n\n   scale_x_continuous(\n\n    expand = c(0, 0),\n\n    limits = c(1980, 2025),\n\n    breaks = seq(1980, 2025, 2),\n\n    sec.axis = dup_axis(name = \"Year\")\n\n  ) +\n\n  theme(\n\n    # Backgrounds\n\n    plot.background = element_rect(fill = \"#333\", color = NA),\n\n    panel.background = element_rect(fill = \"#333\", color = NA),\n\n    panel.grid = element_blank(),\n\n    \n\n    # Axes\n\n    axis.title = element_text(color = \"white\"),\n\n    axis.text = element_text(color = \"white\"),\n\n    axis.text.x = element_text(angle = 90, hjust = 1, color = \"white\"),\n\n    axis.text.y = element_text(color = \"white\", hjust=-0.2),\n\n    axis.ticks = element_line(color = \"white\"),\n\n    \n\n    # Secondary axis text and title\n\n    axis.title.x.top = element_text(color = \"white\"),\n\n    axis.text.x.top = element_text(color = \"white\"),\n\n    \n\n    # Legend\n\n    legend.background = element_rect(fill = \"#333\", color = NA),\n\n    legend.key = element_rect(fill = \"#333\", color = NA),\n\n    legend.text = element_text(color = \"white\"),\n\n    legend.title = element_text(color = \"white\"),\n\n    \n\n    # Titles\n\n    plot.title = element_text(color = \"white\"),\n\n    plot.subtitle = element_text(color = \"white\"),\n\n    plot.caption = element_text(color = \"white\")\n\n  )"
  },
  {
    "objectID": "about.html#mass-coral-bleaching-and-the-gbr",
    "href": "about.html#mass-coral-bleaching-and-the-gbr",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Mass coral bleaching and the GBR",
    "text": "Mass coral bleaching and the GBR\nThe Great Barrier Reef is undergoing rapid warming in the past three decades. A total of nine coral bleaching events have been recorded in 1998, 2002, 2016, 2017, 2018, 2020, 2022, 2024, and 2025. These events have resulted in mass mortality of corals, impacting coral population structures, transforming assemblages, delaying recovery and restructuring entire ecosytems.\nLong-term timeseries data helps prevent normalising the current state by providing historical context. For example, here is a timeseries for 560 reefs in the northern GBR spanning Lama Lama Sea Country to the Wuthathi sea country:\n\n\nCode\nlibrary(tidyverse)\n\nlibrary(ggplot2)\n\nGBR_DHW_CRW &lt;- read.csv(\"/Users/rof011/dhw3/data/CRW_DHWmax.csv\") |&gt; \n\n  pivot_longer(\n\n    cols = starts_with(\"X\"),\n\n    names_to = \"year\",\n\n    values_to = \"dhw\"\n\n  ) %&gt;%\n\n  mutate(\n\n    year = as.numeric(str_remove(year, \"^X\"))\n\n  ) |&gt; filter(lat &lt; -11) |&gt; filter(lat &gt; -14)\n\ndhw_numeric_breaks &lt;- c(0, 3, 6, 9, 12, 15, 18, 21)  # Adjust numeric breaks\n\ndhw_colour_breaks &lt;- c(\"#006f99\", \"#00A6E5\", \"#FFD700\", \"#FF8C00\", \"#B20000\", \"#660000\", \"#3D0000\")\n\nggplot() + theme_bw() +\n\n  geom_tile(data = GBR_DHW_CRW, aes(x = year, y = lat, fill = dhw), linewidth = 0) +\n\n  scale_fill_gradientn(\n\n    limits = c(0, 21),\n\n    name = expression(DHW[max]),\n\n    na.value = \"transparent\",\n\n    breaks = dhw_numeric_breaks,\n\n    labels = dhw_numeric_breaks,\n\n    colours = dhw_colour_breaks,\n\n    values = scales::rescale(dhw_numeric_breaks, from = c(0, 20))\n\n  ) +\n\n  xlab(\"Year\") + ylab(\"Latitude\") +\n\n  # scale_y_continuous(\n\n  #   expand = c(0, 0),\n\n  #   limits = c(-11,-13),\n\n  #   breaks = seq(-11,-13, length.out=5), \n\n  #   labels = seq(-11,-13, length.out=5)\n\n  # ) +\n\n   scale_x_continuous(\n\n    expand = c(0, 0),\n\n    limits = c(1980, 2025),\n\n    breaks = seq(1980, 2025, 2),\n\n    sec.axis = dup_axis(name = \"Year\")\n\n  ) +\n\n  theme(\n\n    # Backgrounds\n\n    plot.background = element_rect(fill = \"#333\", color = NA),\n\n    panel.background = element_rect(fill = \"#333\", color = NA),\n\n    panel.grid = element_blank(),\n\n    \n\n    # Axes\n\n    axis.title = element_text(color = \"white\"),\n\n    axis.text = element_text(color = \"white\"),\n\n    axis.text.x = element_text(angle = 90, hjust = 1, color = \"white\"),\n\n    axis.text.y = element_text(color = \"white\", hjust=-0.2),\n\n    axis.ticks = element_line(color = \"white\"),\n\n    \n\n    # Secondary axis text and title\n\n    axis.title.x.top = element_text(color = \"white\"),\n\n    axis.text.x.top = element_text(color = \"white\"),\n\n    \n\n    # Legend\n\n    legend.background = element_rect(fill = \"#333\", color = NA),\n\n    legend.key = element_rect(fill = \"#333\", color = NA),\n\n    legend.text = element_text(color = \"white\"),\n\n    legend.title = element_text(color = \"white\"),\n\n    \n\n    # Titles\n\n    plot.title = element_text(color = \"white\"),\n\n    plot.subtitle = element_text(color = \"white\"),\n\n    plot.caption = element_text(color = \"white\")\n\n  )"
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "<img src='images/headerimage.png' alt='DHW Logo' height='45' style='margin-top:-6px;'>",
    "section": "Contact",
    "text": "Contact\nDHW uses"
  },
  {
    "objectID": "data-d3.html#d3.heatmap.js",
    "href": "data-d3.html#d3.heatmap.js",
    "title": "Data processing - D3",
    "section": "d3.heatmap.js",
    "text": "d3.heatmap.js\nfull script:\n\n// D3 Heatmap with sticky header and fixed column labels\n\n// Ensure all code runs after DOM is ready\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\n  let currentDataset = 'https://raw.githubusercontent.com/marine-ecologist/dhw3/refs/heads/main/data/CRW_DHWmax.csv';\n  let currentSelectedReefs = [];\n  let currentRowHeight = 1.5;\n  let userSelectedRowHeight = currentRowHeight;\n\n  const fixedHeatmapWidth = 1550;\n  const heatmapContainer = document.getElementById('heatmap-container');\n  const svg = d3.select(\"#heatmap-svg\");\n  const colLabelsSvg = d3.select(\"#col-labels-svg\");\n\n  let reefSelect, rowHeightSlider;\n  let currentMeta, currentMatrix, yearColumns;\n\n  const style = document.createElement('style');\n  style.textContent = `\n    body {\n      background-color: #333;\n      color: white;\n      font-family: Helvetica;\n      margin: 0;\n      padding: 0;\n    }\n    #header {\n      position: sticky;\n      top: 0;\n      background: #333;\n      z-index: 101;\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 5px 40px 0px 40px;\n    }\n    .tooltip {\n      position: absolute;\n      text-align: left;\n      padding: 5px;\n      background: white;\n      border: 1px solid #ccc;\n      pointer-events: none;\n      font-size: 12px;\n      color: black;\n      z-index: 1000;\n      width: 120px;\n    }\n    #heatmap-container {\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      width: 100%;\n      position: relative;\n    }\n    #col-labels-wrapper {\n      position: sticky;\n      top: 40px;\n      background: #333;\n      z-index: 100;\n      width: fit-content;\n      margin-left: 0px;\n    }\n    #col-labels-svg {\n      display: block;\n    }\n    #heatmap-scroll {\n      width: 100%;\n      overflow-x: auto;\n      overflow-y: hidden;\n      padding-top: 0px; /* Reset padding to avoid vertical misalignment */\n      box-sizing: border-box;\n    }\n    #heatmap-wrapper {\n      display: flex;\n      flex-direction: column;\n      width: fit-content;\n    }\n    svg {\n      display: block;\n    }\n    .cell {\n      stroke: none;\n    }\n  `;\n  document.head.appendChild(style);\n\n  function loadData(dataset) {\n    d3.csv(dataset).then(data =&gt; {\n      currentMeta = data.map(row =&gt; ({ id: row.ID, reef: row.Reef, lat: +row.lat }));\n      yearColumns = data.columns.filter(c =&gt; !['ID', 'Reef', 'lat'].includes(c));\n      currentMatrix = data.map(row =&gt; yearColumns.map(year =&gt; +row[year]));\n      setupTomSelect(currentMeta);\n      drawHeatmap(currentMeta, currentMatrix);\n    });\n  }\n\n  function getRowHeight() {\n    return currentSelectedReefs.length &gt; 0 ? 20 : userSelectedRowHeight;\n  }\n\n  function drawHeatmap(meta, matrix) {\n    svg.selectAll(\"*\").remove();\n    colLabelsSvg.selectAll(\"*\").remove();\n    d3.selectAll('.tooltip').remove();\n\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n    const rowHeight = getRowHeight();\n    const cellWidth = fixedHeatmapWidth / yearColumns.length * 0.8;\n\n    svg.attr(\"width\", fixedHeatmapWidth + 66).attr(\"height\", matrix.length * rowHeight + 40);\n    const container = svg.append(\"g\").attr(\"transform\", `translate(66,40)`);\n    colLabelsSvg.attr(\"width\", fixedHeatmapWidth + 66).attr(\"height\", 40);\n\n    colLabelsSvg.selectAll(\".colLabel\")\n      .data(yearColumns)\n      .join(\"text\")\n      .attr(\"class\", \"colLabel\")\n      .attr(\"x\", (d, i) =&gt; 66 + i * cellWidth + cellWidth / 2)\n      .attr(\"y\", 35) // nudge up by 5 pixels\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"alignment-baseline\", \"center\")\n      .attr(\"fill\", \"white\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"transform\", (d, i) =&gt; `rotate(-45, ${66 + i * cellWidth + cellWidth / 2}, 20)`) // adjust rotation center\n      .text(d =&gt; `–${d}`); // add dash before year\n\n    const seen = new Set();\n    svg.selectAll(\".rowLabel\")\n      .data(meta)\n      .join(\"text\")\n      .attr(\"class\", \"rowLabel\")\n      .attr(\"x\", 55)\n      .attr(\"y\", (d, i) =&gt; 40 + i * rowHeight + rowHeight * 0.5)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"font-size\", \"15px\")\n      .text(d =&gt; {\n        if (currentSelectedReefs.length &gt; 0) return `${d.reef} [${d.id}]`;\n        const roundedLat = d.lat.toFixed(1);\n        if (!seen.has(roundedLat)) {\n          seen.add(roundedLat);\n          const degrees = Math.floor(Math.abs(d.lat));\n          const minutes = Math.round((Math.abs(d.lat) - degrees) * 60);\n          return `${degrees}°${minutes.toString().padStart(2, '0')}'`;\n        }\n        return \"\";\n      });\n\n    matrix.forEach((rowData, rowIndex) =&gt; {\n      const row = container.append(\"g\").attr(\"transform\", `translate(0, ${rowIndex * rowHeight})`);\n      row.selectAll(\"rect\")\n        .data(rowData.map((value, colIndex) =&gt; ({ value, rowIndex, colIndex })))\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"cell\")\n        .attr(\"x\", d =&gt; d.colIndex * cellWidth)\n        .attr(\"width\", cellWidth)\n        .attr(\"height\", rowHeight)\n        .attr(\"fill\", d =&gt; isNaN(d.value) ? \"#000\" : d3.scaleLinear()\n          .domain([0, 3, 6, 9, 12, 15, 18, 21])\n          .range([\"#006f99\", \"#00A6E5\", \"#FFD700\", \"#FF8C00\", \"#B20000\", \"#550000\", \"#3D0000\", \"#3D0000\"])(d.value))\n        .on(\"mouseover\", function (event, d) {\n          const m = meta[d.rowIndex];\n          const year = yearColumns[d.colIndex];\n          tooltip.transition().duration(200).style(\"opacity\", 0.9);\n          tooltip.html(`&lt;b&gt;ID:&lt;/b&gt; ${m.id}&lt;br&gt;&lt;b&gt;Reef:&lt;/b&gt; ${m.reef}&lt;br&gt;&lt;b&gt;Latitude:&lt;/b&gt; ${m.lat}&lt;br&gt;&lt;b&gt;Year:&lt;/b&gt; ${year}&lt;br&gt;&lt;b&gt;DHW:&lt;/b&gt; ${d.value}`)\n            .style(\"left\", (event.pageX + 10) + \"px\")\n            .style(\"top\", (event.pageY - 15) + \"px\");\n        })\n        .on(\"mouseout\", () =&gt; tooltip.transition().duration(500).style(\"opacity\", 0));\n    });\n  }\n\n  function setupTomSelect(meta) {\n    if (reefSelect && reefSelect.tomselect) reefSelect.tomselect.destroy();\n    const sortedOptions = meta.slice().sort((a, b) =&gt; a.reef.localeCompare(b.reef));\n\n    new TomSelect(reefSelect, {\n      plugins: ['remove_button'],\n      placeholder: 'Search by reef name or GBRMPA ID',\n      closeAfterSelect: false,\n      options: sortedOptions.map(d =&gt; ({ value: d.id, text: `${d.reef} [${d.id}]` })),\n      maxOptions: null,\n      items: currentSelectedReefs,\n      onInitialize() {\n        try {\n          this.control_input.style.paddingLeft = '10px';\n        } catch (e) {\n          console.warn(\"Could not set padding on TomSelect input:\", e);\n        }\n      },\n      onItemAdd() {\n        currentSelectedReefs = this.items;\n        currentRowHeight = 20;\n        rowHeightSlider.value = currentRowHeight;\n        this.setTextboxValue('');\n        applyFilter();\n      },\n      onItemRemove() {\n        currentSelectedReefs = this.items;\n        currentRowHeight = this.items.length &gt; 0 ? 20 : userSelectedRowHeight;\n        rowHeightSlider.value = currentRowHeight;\n        applyFilter();\n      },\n      onChange(selectedIds) {\n        currentSelectedReefs = selectedIds;\n        currentRowHeight = selectedIds.length &gt; 0 ? 20 : userSelectedRowHeight;\n        rowHeightSlider.value = currentRowHeight;\n        applyFilter();\n      }\n    });\n  }\n\n  function applyFilter() {\n    if (currentSelectedReefs.length === 0) {\n      drawHeatmap(currentMeta, currentMatrix);\n    } else {\n      const filteredMeta = currentMeta.filter(d =&gt; currentSelectedReefs.includes(d.id));\n      const filteredMatrix = filteredMeta.map(d =&gt; {\n        const idx = currentMeta.findIndex(m =&gt; m.id === d.id);\n        return idx !== -1 ? currentMatrix[idx] : [];\n      });\n      drawHeatmap(filteredMeta, filteredMatrix);\n    }\n  }\n\n  function buildHeader() {\n    let header = document.getElementById('header');\n    if (!header) {\n      header = document.createElement('div');\n      header.id = 'header';\n      heatmapContainer.insertBefore(header, heatmapContainer.firstChild);\n    } else {\n      header.innerHTML = '';\n    }\n\n    const leftContainer = document.createElement('div');\n    leftContainer.style.display = 'flex';\n    leftContainer.style.alignItems = 'center';\n    leftContainer.style.gap = '20px';\n\n    const datasetWrapper = document.createElement('div');\n    datasetWrapper.style.display = 'flex';\n    datasetWrapper.style.alignItems = 'center';\n    datasetWrapper.style.gap = '6px';\n\n    const datasetLabel = document.createElement('i');\n    datasetLabel.className = 'fa-solid fa-database';\n    datasetLabel.title = 'Select dataset';\n    datasetLabel.style.color = 'white';\n    datasetLabel.style.fontSize = '16px';\n    datasetLabel.style.cursor = 'pointer';\n\n    const datasetSelect = document.createElement('select');\n    datasetSelect.style.width = '180px';\n    datasetSelect.style.background = '#333';\n    datasetSelect.style.color = 'white';\n    datasetSelect.style.border = '1px solid #004a5c';\n    datasetSelect.style.borderRadius = '4px';\n\n    const datasets = [\n      { name: 'CoralTemp v3.1', value: 'https://raw.githubusercontent.com/marine-ecologist/dhw3/refs/heads/main/data/CRW_DHWmax.csv' },\n      { name: 'OISST v2.1', value: 'https://raw.githubusercontent.com/marine-ecologist/dhw3/refs/heads/main/data/OISST_DHWmax.csv' },\n      { name: 'ERA v5', value: 'https://raw.githubusercontent.com/marine-ecologist/dhw3/refs/heads/main/data/ERA5_DHWmax.csv' }\n    ];\n\n    datasets.forEach(d =&gt; {\n      const option = document.createElement('option');\n      option.value = d.value;\n      option.textContent = d.name;\n      datasetSelect.appendChild(option);\n    });\n\n    datasetSelect.value = currentDataset;\n    datasetSelect.addEventListener('change', () =&gt; {\n      currentDataset = datasetSelect.value;\n      loadData(currentDataset);\n    });\n\n    datasetWrapper.appendChild(datasetLabel);\n    datasetWrapper.appendChild(datasetSelect);\n    leftContainer.appendChild(datasetWrapper);\n\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = 0.25;\n    slider.max = 10;\n    slider.step = 0.1;\n    slider.value = currentRowHeight;\n    slider.style.cursor = 'pointer';\n    slider.addEventListener('input', function () {\n      userSelectedRowHeight = +this.value;\n      if (currentSelectedReefs.length === 0) {\n        currentRowHeight = userSelectedRowHeight;\n        drawHeatmap(currentMeta, currentMatrix);\n      }\n    });\n    rowHeightSlider = slider;\n    leftContainer.appendChild(slider);\n\n    const rightContainer = document.createElement('div');\n    rightContainer.style.display = 'flex';\n    rightContainer.style.alignItems = 'center';\n    rightContainer.style.gap = '10px';\n\n    const selectElement = document.createElement('select');\n    selectElement.id = 'reefSelect';\n    selectElement.multiple = true;\n    selectElement.style.width = '400px';\n\n    const clearButton = document.createElement('i');\n    clearButton.className = 'fa-solid fa-circle-xmark';\n    clearButton.title = 'Clear selection';\n    clearButton.style.fontSize = '20px';\n    clearButton.style.color = '#FFF';\n    clearButton.style.cursor = 'pointer';\n\n    clearButton.addEventListener('click', () =&gt; {\n      if (selectElement.tomselect) {\n        selectElement.tomselect.clear();\n        currentSelectedReefs = [];\n        currentRowHeight = userSelectedRowHeight;\n        rowHeightSlider.value = userSelectedRowHeight;\n        drawHeatmap(currentMeta, currentMatrix);\n      }\n    });\n\n    rightContainer.appendChild(selectElement);\n    rightContainer.appendChild(clearButton);\n\n    header.appendChild(leftContainer);\n    header.appendChild(rightContainer);\n\n    reefSelect = selectElement;\n  }\n\n  buildHeader();\n  loadData(currentDataset);\n});"
  },
  {
    "objectID": "data-d3.html#notes",
    "href": "data-d3.html#notes",
    "title": "Data processing - D3",
    "section": "Notes",
    "text": "Notes\n\n- Global Variables and Defaults\nInitial dataset and UI state. currentRowHeight is dynamically updated depending on reef selection\n\nlet currentDataset = 'https://raw.githubusercontent.com/marine-ecologist/dhw3/refs/heads/main/data/CRW_DHWmax.csv';\nlet currentSelectedReefs = [];\nlet currentRowHeight = 1.5;\nlet userSelectedRowHeight = currentRowHeight;\n\n\n\n- Heatmap and Label Setup\nDefine SVG containers and constants to maintain fixed layout.\n\nconst fixedHeatmapWidth = 1550;\nconst heatmapContainer = document.getElementById('heatmap-container');\nconst svg = d3.select(\"#heatmap-svg\");\nconst colLabelsSvg = d3.select(\"#col-labels-svg\");\n\n\n\n- CSS Styling with JS\nInjects necessary styles for layout, color, tooltips, sticky headers, and responsive design for standalone js\n\nconst style = document.createElement('style');\nstyle.textContent = `...`;\ndocument.head.appendChild(style);\n\n\n\n- Dynamic row height\nReturns 20px row height when reefs are selected; otherwise uses user-controlled slider.\n\nfunction getRowHeight() {\n  return currentSelectedReefs.length &gt; 0 ? 20 : userSelectedRowHeight;\n}\n\n\n\n- TomSelect Setup\nInstantiates TomSelect dropdown to allow multi-select filtering of reefs.\nHandles: - Adding/removing reefs - Updating row height - Clearing selections\n\nfunction setupTomSelect(meta) {\n  ...\n}"
  }
]